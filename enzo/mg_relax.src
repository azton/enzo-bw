c=======================================================================
c//////////////////////////  SUBROUTINE MG_RELAX  \\\\\\\\\\\\\\\\\\\\\\
c
      subroutine mg_relax(solution, rhs, ndim, dim1, dim2, dim3)
c
c  MULTIGRID: RELAX SOLUTION WITH DIFFERENCED POISSON OPERATOR
c
c  written by: Greg Bryan
c  date:       January, 1998
c  modified1:
c
c  PURPOSE:
c
c  INPUTS:
c     solution     - solution field
c     rhs          - right hand side
c     dim1-3       - dimensions
c     ndim         - rank of fields
c
c  OUTPUT ARGUMENTS: 
c     solution     - solution field
c
c  EXTERNALS: 
c
c  LOCALS:
c
c-----------------------------------------------------------------------
c
      implicit NONE
c
c-----------------------------------------------------------------------
c
c  argument declarations
c
      integer ndim, dim1, dim2, dim3
      real    solution(dim1, dim2, dim3), rhs(dim1, dim2, dim3)
c
c  locals
c
      integer i, j, k, ipass, istart, jstart, kstart
      real    h1, h2, h3, coef1, coef2, coef3
c
c\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\///////////////////////////////
c=======================================================================
c
c     Precompute some things
c
      h1 = 1.0/real(dim1-1)
      if (ndim .ge. 2) h2 = h1/real(dim2-1)
      if (ndim .ge. 3) h3 = h2/real(dim3-1)
      coef1 = 1.0/2.0
      coef2 = 1.0/4.0
      coef3 = 1.0/6.0
c
c     a) 1D
c
      if (ndim .eq. 1) then
         do ipass=1, 2
            do i=ipass+1, dim1-1, 2
               solution(i,1,1) = coef1*(
     &                           solution(i-1,1,1)+solution(i+1,1,1) -
     &                           h1*rhs(i,1,1))
            enddo
         enddo
      endif
c
c     b) 2D
c
      if (ndim .eq. 2) then
         jstart = 1
         do ipass=1, 2
            istart = jstart
            do j=2, dim2-1
               do i=istart+1, dim1-1, 2
                  solution(i,j,1) = coef2*(
     &                    solution(i-1,j  ,1) + solution(i+1,j  ,1) +
     &                    solution(i  ,j-1,1) + solution(i  ,j+1,1) -
     &                    h2*rhs(i,j,1))
               enddo
               istart = 3-istart
            enddo
            jstart = 3-jstart
         enddo
      endif
c
c     c) 3D
c
      if (ndim .eq. 3) then
         kstart = 1
         do ipass=1, 2
            jstart = kstart
            do k=2, dim3-1
               istart = jstart
               do j=2, dim2-1
                  do i=istart+1, dim1-1, 2
                     solution(i,j,k) = coef3*(
     &                  solution(i-1,j  ,k  ) + solution(i+1,j  ,k  ) +
     &                  solution(i  ,j-1,k  ) + solution(i  ,j+1,k  ) +
     &                  solution(i  ,j  ,k-1) + solution(i  ,j  ,k+1) -
     &                  h3*rhs(i,j,k))
                  enddo
                  istart = 3-istart
               enddo
               jstart = 3-jstart
            enddo
            kstart = 3-kstart
         enddo
      endif
c
      return
      end
